// Source: https://stackoverflow.com/a/47157577.
class AsyncBlockingQueue {
    constructor() {
        // invariant: at least one of the arrays is empty
        this.resolvers = [];
        this.promises = [];
    }
    _add() {
        this.promises.push(new Promise(resolve => {
            this.resolvers.push(resolve);
        }));
    }
    enqueue(t) {
        // if (this.resolvers.length) this.resolvers.shift()(t);
        // else this.promises.push(Promise.resolve(t));
        if (!this.resolvers.length) this._add();
        this.resolvers.shift()(t);
    }
    dequeue() {
        if (!this.promises.length) this._add();
        return this.promises.shift();
    }
}
export { AsyncBlockingQueue };